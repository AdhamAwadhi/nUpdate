// Author: Dominic Beger (Trade/ProgTrade) 2016

using System;
using System.ComponentModel;
using System.Net.Sockets;
using System.Runtime.InteropServices;

namespace nUpdate.Administration.Core.Proxy.EventArgs
{
    /// <summary>
    ///     Event arguments class for the EncryptAsyncCompleted event.
    /// </summary>
    [ComVisible(false)]
    public class CreateConnectionAsyncCompletedEventArgs : AsyncCompletedEventArgs
    {
        /// <summary>
        ///     Constructor.
        /// </summary>
        /// <param name="error">Exception information generated by the event.</param>
        /// <param name="cancelled">Cancelled event flag.  This flag is set to true if the event was cancelled.</param>
        /// <param name="proxyConnection">Proxy Connection.  The initialized and open TcpClient proxy connection.</param>
        public CreateConnectionAsyncCompletedEventArgs(Exception error, bool cancelled, TcpClient proxyConnection)
            : base(error, cancelled, null)
        {
            ProxyConnection = proxyConnection;
        }

        /// <summary>
        ///     The proxy connection.
        /// </summary>
        public TcpClient ProxyConnection { get; }
    }
}